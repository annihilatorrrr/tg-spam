// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/umputun/tg-spam/app/storage"
	"io"
	"sync"
)

// DictStoreMock is a mock implementation of bot.DictStore.
//
//	func TestSomethingThatUsesDictStore(t *testing.T) {
//
//		// make and configure a mocked bot.DictStore
//		mockedDictStore := &DictStoreMock{
//			ReaderFunc: func(ctx context.Context, t storage.DictionaryType) (io.ReadCloser, error) {
//				panic("mock out the Reader method")
//			},
//		}
//
//		// use mockedDictStore in code that requires bot.DictStore
//		// and then make assertions.
//
//	}
type DictStoreMock struct {
	// ReaderFunc mocks the Reader method.
	ReaderFunc func(ctx context.Context, t storage.DictionaryType) (io.ReadCloser, error)

	// calls tracks calls to the methods.
	calls struct {
		// Reader holds details about calls to the Reader method.
		Reader []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// T is the t argument value.
			T storage.DictionaryType
		}
	}
	lockReader sync.RWMutex
}

// Reader calls ReaderFunc.
func (mock *DictStoreMock) Reader(ctx context.Context, t storage.DictionaryType) (io.ReadCloser, error) {
	if mock.ReaderFunc == nil {
		panic("DictStoreMock.ReaderFunc: method is nil but DictStore.Reader was just called")
	}
	callInfo := struct {
		Ctx context.Context
		T   storage.DictionaryType
	}{
		Ctx: ctx,
		T:   t,
	}
	mock.lockReader.Lock()
	mock.calls.Reader = append(mock.calls.Reader, callInfo)
	mock.lockReader.Unlock()
	return mock.ReaderFunc(ctx, t)
}

// ReaderCalls gets all the calls that were made to Reader.
// Check the length with:
//
//	len(mockedDictStore.ReaderCalls())
func (mock *DictStoreMock) ReaderCalls() []struct {
	Ctx context.Context
	T   storage.DictionaryType
} {
	var calls []struct {
		Ctx context.Context
		T   storage.DictionaryType
	}
	mock.lockReader.RLock()
	calls = mock.calls.Reader
	mock.lockReader.RUnlock()
	return calls
}

// ResetReaderCalls reset all the calls that were made to Reader.
func (mock *DictStoreMock) ResetReaderCalls() {
	mock.lockReader.Lock()
	mock.calls.Reader = nil
	mock.lockReader.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *DictStoreMock) ResetCalls() {
	mock.lockReader.Lock()
	mock.calls.Reader = nil
	mock.lockReader.Unlock()
}
